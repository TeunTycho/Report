name: Genereer Incidentenrapport

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  genereer-rapport:
    runs-on: ubuntu-latest
    steps:
      - name: Code ophalen
        uses: actions/checkout@v2

      - name: Incidentissues ophalen uit het 'Report'-repository
        run: |
          owner="TeunTycho"
          repo1="Report"
          repo2="ITSM"
          label="incident"
          url1="https://api.github.com/repos/$owner/$repo1/issues?labels=$label"
          url2="https://api.github.com/repos/$owner/$repo2/issues?labels=$label"
          response1=$(curl -s $url1)
          response2=$(curl -s $url2)
          echo "$response1" > issues_report.json
          echo "$response2" > issues_itsm.json

      - name: Verkrijg de laatste reacties
        run: |
          owner="TeunTycho"
          jq -c '.[]' issues_report.json | while read i; do
            issue_number=$(echo $i | jq '.number')
            comments_url=$(echo $i | jq -r '.comments_url')
            if [[ $(echo $i | jq '.comments') -gt 0 ]]; then
              last_comment=$(curl -s $comments_url | jq '.[-1].body')
            else
              last_comment=""
            fi
            echo $i | jq --arg comment "$last_comment" '. + {last_comment: $comment}' >> temp_issues.json
          done
          mv temp_issues.json combined_issues.json

      - name: Rapport genereren
        run: |
          echo "Issue_Nummer,Titel,URL,Status,Labels,Toegewezenen,Aanmaakdatum,Laatst_bijgewerkt,Gesloten_datum,Auteur,Laatste_Reactie" > incidentenrapport.csv
          cat combined_issues.json | jq -r '.[] | [.number, .title, .html_url, .state, (.labels | map(.name) | join(", ")), (.assignees | map(.login) | join(", ")), .created_at, .updated_at, .closed_at, .user.login, .last_comment] | @csv' >> incidentenrapport.csv

      - name: Rapport uploaden als artefact
        uses: actions/upload-artifact@v2
        with:
          name: incidentenrapport
          path: incidentenrapport.csv
